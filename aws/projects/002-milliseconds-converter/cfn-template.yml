AWSTemplateFormatVersion: 2010-09-09
Description: |
  This is my millisecond converter template. This project contains Autoscaling group with Elastic Load Balancer.
  It has a security group, which enables 22 SSH and 80 HTTP ports from anywhere available.

Parameters:
  VpcId:
    Description: VpcId of my existing Virtual Private Cloud(VPC) 
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: The SubnetIds in our VPC 
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: WebServer EC2 instance type 
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t1.micro
      - m1.small
      - m1.medium
      - m1.large
    ConstraintDescription: must be a valid EC2 instance type
  KeyName:
    Description: The EC2 Key Pair allow SSH access to the instance 
    Type: AWS::EC2::KeyPair::KeyName
  PolicyTargetValue:
    Description: Please enter your target value that triggers the AutoScalingGroup  
    Type: String
    Default: '60'

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0c94855ba95c71c99
    us-east-2:
      AMI: ami-0603cbe34fd08cb81
    us-west-1:
      AMI: ami-0e65ed16c9bf1abc7
    us-west-2:
      AMI: ami-0841edc20334f9287
    eu-west-1:
      AMI: ami-08a2aed6e0a6f9c7d
Resources:
  MyAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones: !GetAZs 
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref MyLauchConfiguration
      MaxSize: "3" #required
      MinSize: "1" #required
      TargetGroupARNs:
        - !Ref MyALBTargetGroup
  MyLauchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: !FindInMap  
        - RegionImageMap
        - !Ref AWS::Region
        - AMI 
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData: !Base64 |
          #! /bin/bash
          yum update -y
          yum install python3 -y
          pip3 install flask
          cd /home/ec2-user
          wget https://raw.githubusercontent.com/Musti4096/aws_devops_workshop/master/aws/projects/002-milliseconds-converter/app.py
          mkdir templates
          cd templates
          wget https://raw.githubusercontent.com/Musti4096/aws_devops_workshop/master/aws/projects/002-milliseconds-converter/templates/index.html
          wget https://raw.githubusercontent.com/Musti4096/aws_devops_workshop/master/aws/projects/002-milliseconds-converter/templates/result.html
          cd ..
          python3 app.py
  MyCPUPolicy: #completed
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref MyAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue : !Ref PolicyTargetValue
  MyAppLoadBalancer: #completed
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      SecurityGroups:
        - !GetAtt MySecurityGroup.GroupId
      Subnets: !Ref Subnets 
  MyALBListener: #completed
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: #required
        - Type: forward 
          TargetGroupArn: !Ref MyALBTargetGroup
      LoadBalancerArn: !Ref MyAppLoadBalancer  #required
      Port: 80 #required
      Protocol: HTTP #required
  MyALBTargetGroup: #completed
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP 
      UnhealthyThresholdCount: 3
      VpcId: !Ref VpcId
  MySecurityGroup: #completed
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enables SSH and HTTP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 
Outputs:
  URL: 
    Description: The URL of the website
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt MyAppLoadBalancer.DNSName
